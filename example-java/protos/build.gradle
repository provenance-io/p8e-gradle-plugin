buildscript {
    ext {
        protobuf_version = '3.6.+'
    }

    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.13'
    }
}

plugins {
    id "com.google.protobuf" version "0.8.13"
    id "maven-publish"
    id "java-library"
}

sourceSets.main.java.srcDirs += 'build/generated/source/proto/main/java'

dependencies {
    implementation("io.provenance.p8e:p8e-contract-base:0.6.0-testnet-beta.1")
    // implementation("io.provenance.p8e:p8e-contract-base:1.0-SNAPSHOT")

    compile "com.google.protobuf:protobuf-java:$protobuf_version"
    compile "com.google.protobuf:protobuf-java-util:$protobuf_version"
}

protobuf {
    protoc {
        // The artifact spec for the Protobuf Compiler
        artifact = "com.google.protobuf:protoc:$protobuf_version"
    }
    plugins {
        // Optional: an artifact spec for a protoc plugin, with "grpc" as
        // the identifier, which can be referred to in the "plugins"
        // container of the "generateProtoTasks" closure.
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.0.0-pre2'
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                python {}
            }
        }
        ofSourceSet('main')*.plugins {
            // Apply the "grpc" plugin whose spec is defined above, without
            // options.  Note the braces cannot be omitted, otherwise the
            // plugin will not be added. This is because of the implicit way
            // NamedDomainObjectContainer binds the methods.
            grpc {}
        }
    }
}

publishing {
    publications {
        proto(MavenPublication) {
            artifact tasks.jar
        }
    }
}
