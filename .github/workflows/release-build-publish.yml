name: Build and Publish

on:
  release:
    types: [created]
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
#   test:
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v2

#       - name: Run tests
#         run: |
#           if [ -f docker-compose.test.yml ]; then
#             docker-compose --file docker-compose.test.yml build
#             docker-compose --file docker-compose.test.yml run sut
#           else
#             docker build . --file Dockerfile
#           fi

  java_build:
    name: Build and Publish Jar

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Get Version
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml

      - name: Build with Gradle
        run: ./gradlew clean build jacocoTestReport --refresh-dependencies -Pversion=$VERSION
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to Gradle Plugin Repository
        run: ./gradlew publishPlugins -Pversion=$VERSION -Pgradle.publish.key=$PUBLISH_KEY -Pgradle.publish.secret=$PUBLISH_SECRET
        env:
          PUBLISH_KEY: ${{ secrets.PUBLISH_KEY }}
          PUBLISH_SECRET: ${{ secrets.PUBLISH_SECRET }}
        if: github.event_name == 'release'

        # - name: Upload coverage to Codecov
        #   uses: codecov/codecov-action@v1.2.2
        #   with:
        #     token: ${{ secrets.CODECOV_TOKEN }}
        #     directory: build/reports/jacoco/test/*.xml
